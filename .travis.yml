language: php

cache:
  directories:
    - $HOME/.composer/cache

services:
  - memcached
  - mongodb
  - redis-server

addons:
  apt:
    packages:
      - rabbitmq-server

env:
  global:
    - COMPOSER_ARGS="--no-interaction --no-plugins"
    - COVERAGE_DEPS="php-coveralls/php-coveralls"
    - TESTS_LAMINAS_DIAGNOSTICS_APCU_ENABLED=true
    - TESTS_LAMINAS_DIAGNOSTICS_MONGO_ENABLED=true
    - TESTS_LAMINAS_DIAGNOSTICS_RABBITMQ_ENABLED=true
    - TESTS_LAMINAS_DIAGNOSTICS_REDIS_ENABLED=true

matrix:
  fast_finish: true
  include:
    - php: 7.3
      env:
        - DEPS=lowest
        - TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED=true
    - php: 7.3
      env:
        - DEPS=latest
        - TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED=true
    - php: nightly
      env:
        - DEPS=lowest
        - MONGO_LEGACY=true
        - TESTS_LAMINAS_DIAGNOSTICS_APCU_ENABLED=false
        - TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED=false
        - TESTS_LAMINAS_DIAGNOSTICS_RABBITMQ_ENABLED=false
    - php: nightly
      env:
        - DEPS=latest
        - MONGO_LEGACY=true
        - TESTS_LAMINAS_DIAGNOSTICS_APCU_ENABLED=false
        - TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED=false
        - TESTS_LAMINAS_DIAGNOSTICS_RABBITMQ_ENABLED=false

before_install:
  - if [[ $TEST_COVERAGE != 'true' ]]; then phpenv config-rm xdebug.ini || return 0 ; fi
  - if [[ $TESTS_LAMINAS_DIAGNOSTICS_APCU_ENABLED == 'true' ]]; then echo "extension = apcu.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini ; fi
  - if [[ $TESTS_LAMINAS_DIAGNOSTICS_MEMCACHE_ENABLED == 'true' ]]; then yes|CFLAGS="-fgnu89-inline" pecl install -f memcache ; fi
  - if [[ $TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED == 'true' ]]; then echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini ; fi
  - if [[ $MONGO_LEGACY == 'true' ]]; then echo "extension = mongo.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini ; fi
  - if [[ $MONGO_LEGACY != 'true' ]]; then pecl upgrade mongodb ; fi
  - if [[ $MONGO_LEGACY != 'true' ]]; then echo "extension = mongodb.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini ; fi

install:
  - travis_retry composer install $COMPOSER_ARGS --ignore-platform-reqs
  - if [[ $LEGACY_DEPS != '' ]]; then travis_retry composer update $COMPOSER_ARGS --with-dependencies $LEGACY_DEPS ; fi
  - if [[ $DEPS == 'latest' ]]; then travis_retry composer update $COMPOSER_ARGS ; fi
  - if [[ $DEPS == 'lowest' ]]; then travis_retry composer update --prefer-lowest --prefer-stable $COMPOSER_ARGS ; fi
  - if [[ $MONGO_LEGACY != 'true' ]]; then travis_retry composer require --dev $COMPOSER_ARGS mongodb/mongodb ; fi
  - stty cols 120 && php -m
  - stty cols 120 && composer show

script:
  - if [[ $TEST_COVERAGE == 'true' ]]; then composer run-script test-coverage -- --verbose ; else composer run-script test -- --verbose ; fi
  - if [[ $CS_CHECK == 'true' ]]; then composer cs-check ; fi

after_script:
  - if [[ $TEST_COVERAGE == 'true' ]]; then travis_retry composer require --dev $COMPOSER_ARGS $COVERAGE_DEPS ; fi
  - if [[ $TEST_COVERAGE == 'true' ]]; then travis_retry vendor/bin/php-coveralls -v ; fi

notifications:
  email: false
