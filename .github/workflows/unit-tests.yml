name: "Execute Unit Tests"

on:
  pull_request:
    paths-ignore:
    - 'doc/**'
    - 'mkdocs.yml'
    - '*.md'
  push:
    paths-ignore:
    - 'doc/**'
    - 'mkdocs.yml'
    - '*.md'

jobs:
  run:
    runs-on: ubuntu-latest

    services:
      memcached:
        image: memcached
        ports:
          - 11211:11211

      mongodb:
        image: mongo
        ports:
          - 27017:27017

      rabbitmq:
        image: rabbitmq
        ports:
          - 5672:5672

      redis:
        image: redis
        ports:
          - 6379:6379
        options: --entrypoint redis-server

    strategy:
      fail-fast: false
      matrix:
        php-version:
          - "7.3"
          - "7.4"
          - "8.0"
          - "8.1"
        deps-version:
          - "lowest"
          - "latest"
        include:
          - php-version: "8.0"
            composer-args: "--no-interaction --no-progress --ignore-platform-reqs"
            memcached-enabled: 'false'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, readline, redis, apcu, mongodb, memcached
          ini-values: memory_limit=-1
          coverage: none
          tools: composer:v2

      - name: "Cache dependencies"
        uses: "actions/cache@v2"
        with:
          path: |
            ~/.composer/cache
            vendor
          key: "php-${{ matrix.php-version }}-${{ matrix.deps-version }}"
          restore-keys: "php-${{ matrix.php-version }}-${{ matrix.deps-version }}"

      - name: Install dependencies
        env:
          DEPS: ${{ matrix.deps-version }}
          COMPOSER_ARGS: ${{ matrix.composer-args || '--no-interaction --no-progress' }}
          COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          composer install $COMPOSER_ARGS
          if [[ $DEPS == 'latest' ]]; then composer update $COMPOSER_ARGS ; fi
          if [[ $DEPS == 'lowest' ]]; then composer update --prefer-lowest --prefer-stable $COMPOSER_ARGS ; fi
          composer show

      - name: Setup problem matcher for PHPUnit
        run: echo "::add-matcher${{ runner.tool_cache }}/phpunit.json"

      - name: Run unit tests
        env:
          TESTS_LAMINAS_DIAGNOSTICS_MEMCACHED_ENABLED: ${{ matrix.memcached-enabled || 'true' }}
          TESTS_LAMINAS_DIAGNOSTICS_RABBITMQ_ENABLED: true
          TESTS_LAMINAS_DIAGNOSTICS_REDIS_ENABLED: true
        shell: bash
        run: "composer test"
