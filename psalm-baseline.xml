<?xml version="1.0" encoding="UTF-8"?>
<files psalm-version="5.2.0@fb685a16df3050d4c18d8a4100fe83abe6458cba">
  <file src="src/Check/AbstractCheck.php">
    <MissingConstructor occurrences="4">
      <code>$label</code>
      <code>$label</code>
      <code>$label</code>
      <code>$label</code>
    </MissingConstructor>
    <MissingReturnType occurrences="1">
      <code>setLabel</code>
    </MissingReturnType>
    <PossiblyFalseOperand occurrences="1">
      <code>strrpos($class, '\\')</code>
    </PossiblyFalseOperand>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>$this-&gt;label !== null</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/Check/AbstractFileCheck.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>AbstractFileCheck</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/AbstractMemoryCheck.php">
    <DocblockTypeContradiction occurrences="2">
      <code>is_numeric($criticalThreshold)</code>
      <code>is_numeric($warningThreshold)</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="1">
      <code>AbstractMemoryCheck</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/ApcFragmentation.php">
    <DocblockTypeContradiction occurrences="2">
      <code>is_numeric($criticalThreshold)</code>
      <code>is_numeric($warningThreshold)</code>
    </DocblockTypeContradiction>
    <MixedArgument occurrences="2">
      <code>$fragPercent</code>
      <code>$info['block_lists'][$i]</code>
    </MixedArgument>
    <MixedArrayAccess occurrences="8">
      <code>$block['offset']</code>
      <code>$block['offset']</code>
      <code>$block['size']</code>
      <code>$block['size']</code>
      <code>$block['size']</code>
      <code>$block['size']</code>
      <code>$info['block_lists'][$i]</code>
      <code>$info['block_lists'][$i]</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="5">
      <code>$block</code>
      <code>$fragPercent</code>
      <code>$fragsize</code>
      <code>$freetotal</code>
      <code>$ptr</code>
    </MixedAssignment>
    <MixedOperand occurrences="5">
      <code>$block['offset']</code>
      <code>$block['size']</code>
      <code>$block['size']</code>
      <code>$fragsize / $freetotal</code>
      <code>$freetotal</code>
    </MixedOperand>
    <PropertyNotSetInConstructor occurrences="1">
      <code>ApcFragmentation</code>
    </PropertyNotSetInConstructor>
    <UnusedVariable occurrences="2">
      <code>$nseg</code>
      <code>$nseg</code>
    </UnusedVariable>
  </file>
  <file src="src/Check/ApcMemory.php">
    <MixedInferredReturnType occurrences="2">
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="2">
      <code>$this-&gt;apcInfo['avail_mem']</code>
      <code>$this-&gt;apcInfo['num_seg']</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;apcInfo['num_seg'] * $this-&gt;apcInfo['seg_size']</code>
      <code>$this-&gt;getTotalMemory() - $this-&gt;apcInfo['avail_mem']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$apcInfo</code>
      <code>ApcMemory</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/Callback.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>mixed</code>
    </LessSpecificImplementedReturnType>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Callback</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/ClassExists.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>ClassExists</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/CouchDBCheck.php">
    <MixedArgument occurrences="6">
      <code>$couchDbSettings['dbname']</code>
      <code>$couchDbSettings['host']</code>
      <code>$couchDbSettings['password']</code>
      <code>$couchDbSettings['port']</code>
      <code>$couchDbSettings['username']</code>
      <code>$couchDbUrl</code>
    </MixedArgument>
    <MixedAssignment occurrences="1">
      <code>$couchDbUrl</code>
    </MixedAssignment>
    <MixedOperand occurrences="1">
      <code>$couchDbSettings['protocol']</code>
    </MixedOperand>
    <PropertyNotSetInConstructor occurrences="1">
      <code>CouchDBCheck</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/CpuPerformance.php">
    <InvalidScalarArgument occurrences="13">
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$p</code>
      <code>$p</code>
      <code>$t</code>
      <code>$t</code>
      <code>2</code>
      <code>2</code>
      <code>2</code>
      <code>2</code>
      <code>4</code>
    </InvalidScalarArgument>
    <NullArgument occurrences="2">
      <code>null</code>
      <code>null</code>
    </NullArgument>
    <PossiblyNullArgument occurrences="4">
      <code>$b</code>
      <code>$b</code>
      <code>$b</code>
      <code>bcsqrt(2)</code>
    </PossiblyNullArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>CpuPerformance</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(float) $minPerformance</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Check/DirReadable.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>DirReadable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/DirWritable.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>DirWritable</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/DiskFree.php">
    <DocblockTypeContradiction occurrences="1">
      <code>is_scalar($size)</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="1">
      <code>$bytes</code>
    </InvalidReturnStatement>
    <InvalidScalarArgument occurrences="1">
      <code>$size</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="6">
      <code>$a</code>
      <code>$a</code>
      <code>$k</code>
      <code>$this-&gt;path</code>
      <code>$this-&gt;path</code>
      <code>$this-&gt;path</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="1"/>
    <MixedArrayAccess occurrences="1">
      <code>$x[$i]</code>
    </MixedArrayAccess>
    <MixedArrayOffset occurrences="2">
      <code>$x[$i]</code>
      <code>$x[$i]</code>
    </MixedArrayOffset>
    <MixedAssignment occurrences="3">
      <code>$bytes</code>
      <code>$bytes</code>
      <code>$i</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="3">
      <code>$bytes</code>
      <code>$this-&gt;path</code>
      <code>$x[$i]</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="1">
      <code>$bytes</code>
    </MixedReturnStatement>
    <PossiblyUndefinedVariable occurrences="2">
      <code>$k</code>
      <code>$k</code>
    </PossiblyUndefinedVariable>
    <PropertyNotSetInConstructor occurrences="1">
      <code>DiskFree</code>
    </PropertyNotSetInConstructor>
    <TypeDoesNotContainType occurrences="1">
      <code>! is_float($free)</code>
    </TypeDoesNotContainType>
    <UndefinedThisPropertyAssignment occurrences="1">
      <code>$this-&gt;path</code>
    </UndefinedThisPropertyAssignment>
    <UndefinedThisPropertyFetch occurrences="1">
      <code>$this-&gt;path</code>
    </UndefinedThisPropertyFetch>
    <UndefinedVariable occurrences="3">
      <code>$a</code>
      <code>$a</code>
      <code>$x</code>
    </UndefinedVariable>
    <UnusedVariable occurrences="12">
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$a</code>
      <code>$x</code>
      <code>$x</code>
      <code>$x</code>
      <code>$x</code>
      <code>$x</code>
      <code>$x</code>
    </UnusedVariable>
  </file>
  <file src="src/Check/DiskUsage.php">
    <DocblockTypeContradiction occurrences="2">
      <code>is_numeric($criticalThreshold)</code>
      <code>is_numeric($warningThreshold)</code>
    </DocblockTypeContradiction>
    <PropertyNotSetInConstructor occurrences="1">
      <code>DiskUsage</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/DoctrineMigration.php">
    <MixedInferredReturnType occurrences="2">
      <code>Version[]</code>
      <code>Version[]</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;input-&gt;getAvailableVersions()</code>
      <code>$this-&gt;input-&gt;getMigratedVersions()</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>DoctrineMigration</code>
    </PropertyNotSetInConstructor>
    <UndefinedMethod occurrences="2">
      <code>getAvailableVersions</code>
      <code>getMigratedVersions</code>
    </UndefinedMethod>
  </file>
  <file src="src/Check/ExtensionLoaded.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>ExtensionLoaded</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/GuzzleHttpService.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$result instanceof Failure</code>
      <code>$result instanceof Failure</code>
    </DocblockTypeContradiction>
    <InvalidReturnStatement occurrences="2"/>
    <InvalidReturnType occurrences="2">
      <code>bool|FailureInterface</code>
      <code>bool|FailureInterface</code>
    </InvalidReturnType>
    <LessSpecificReturnStatement occurrences="3">
      <code>$request-&gt;withBody(Utils::streamFor($body))</code>
      <code>$request-&gt;withBody(Utils::streamFor(http_build_query($body, '', '&amp;')))</code>
      <code>$request-&gt;withBody(Utils::streamFor(json_encode($body)))</code>
    </LessSpecificReturnStatement>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$headers</code>
    </MixedArgumentTypeCoercion>
    <MoreSpecificReturnType occurrences="1">
      <code>PsrRequestInterface</code>
    </MoreSpecificReturnType>
    <PropertyNotSetInConstructor occurrences="1">
      <code>GuzzleHttpService</code>
    </PropertyNotSetInConstructor>
    <PropertyTypeCoercion occurrences="1">
      <code>$guzzle</code>
    </PropertyTypeCoercion>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $response-&gt;getStatusCode()</code>
    </RedundantCastGivenDocblockType>
    <UndefinedDocblockClass occurrences="2">
      <code>bool|FailureInterface</code>
      <code>bool|FailureInterface</code>
    </UndefinedDocblockClass>
    <UnusedParam occurrences="1">
      <code>$options</code>
    </UnusedParam>
  </file>
  <file src="src/Check/HttpService.php">
    <PossiblyNullPropertyAssignmentValue occurrences="2">
      <code>$content</code>
      <code>$statusCode</code>
    </PossiblyNullPropertyAssignmentValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>HttpService</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/IniFile.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>IniFile</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/JsonFile.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>JsonFile</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/Memcache.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$port &lt; 0</code>
      <code>is_string($host)</code>
    </DocblockTypeContradiction>
    <MixedAssignment occurrences="1">
      <code>$memcache</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>addServer</code>
      <code>connect</code>
      <code>getExtendedStats</code>
    </MixedMethodCall>
    <NoValue occurrences="1">
      <code>$port</code>
    </NoValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Memcache</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $port</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Check/Memcached.php">
    <DocblockTypeContradiction occurrences="2">
      <code>$port &lt; 0</code>
      <code>is_string($host)</code>
    </DocblockTypeContradiction>
    <MixedAssignment occurrences="1">
      <code>$memcached</code>
    </MixedAssignment>
    <MixedMethodCall occurrences="3">
      <code>addServer</code>
      <code>getLastDisconnectedServer</code>
      <code>getStats</code>
    </MixedMethodCall>
    <NoValue occurrences="1">
      <code>$port</code>
    </NoValue>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Memcached</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $port</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Check/Mongo.php">
    <MixedInferredReturnType occurrences="1">
      <code>array|Iterator</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>listDBs</code>
      <code>listDatabases</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="2">
      <code>(new MongoClient($this-&gt;connectionUri))-&gt;listDBs()</code>
      <code>(new MongoDBClient($this-&gt;connectionUri))-&gt;listDatabases()</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Mongo</code>
    </PropertyNotSetInConstructor>
    <UndefinedDocblockClass occurrences="2">
      <code>MongoConnectionException</code>
      <code>\MongoDB\Driver\Exception</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Check/OpCacheMemory.php">
    <MixedArrayAccess occurrences="4">
      <code>$this-&gt;opCacheInfo['memory_usage']['free_memory']</code>
      <code>$this-&gt;opCacheInfo['memory_usage']['used_memory']</code>
      <code>$this-&gt;opCacheInfo['memory_usage']['used_memory']</code>
      <code>$this-&gt;opCacheInfo['memory_usage']['wasted_memory']</code>
    </MixedArrayAccess>
    <MixedInferredReturnType occurrences="2">
      <code>int</code>
      <code>int</code>
    </MixedInferredReturnType>
    <MixedOperand occurrences="1">
      <code>$this-&gt;opCacheInfo['memory_usage']['used_memory']</code>
    </MixedOperand>
    <MixedReturnStatement occurrences="2">
      <code>$this-&gt;opCacheInfo['memory_usage']['used_memory']</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$opCacheInfo</code>
      <code>OpCacheMemory</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/PhpFlag.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>PhpFlag</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/PhpVersion.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;operator</code>
    </ArgumentTypeCoercion>
    <PropertyNotSetInConstructor occurrences="1">
      <code>PhpVersion</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/ProcessRunning.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_numeric($processNameOrPid) &amp;&amp; ! is_scalar($processNameOrPid)</code>
    </DocblockTypeContradiction>
    <MixedAssignment occurrences="1">
      <code>$this-&gt;processName</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="3">
      <code>$pid</code>
      <code>$processName</code>
      <code>ProcessRunning</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $this-&gt;pid</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Check/RabbitMQ.php">
    <MixedInferredReturnType occurrences="1">
      <code>AMQPSocketConnection|AMQPConnection</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1"/>
    <PropertyNotSetInConstructor occurrences="1">
      <code>RabbitMQ</code>
    </PropertyNotSetInConstructor>
    <UndefinedDocblockClass occurrences="2">
      <code>$this-&gt;createClient()</code>
      <code>AMQPSocketConnection|AMQPConnection</code>
    </UndefinedDocblockClass>
  </file>
  <file src="src/Check/Redis.php">
    <MixedAssignment occurrences="1">
      <code>$client</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>PredisClient|RedisExtensionClient</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>auth</code>
      <code>connect</code>
    </MixedMethodCall>
    <MixedReturnStatement occurrences="1">
      <code>$client</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>Redis</code>
    </PropertyNotSetInConstructor>
    <UndefinedClass occurrences="1">
      <code>RedisException</code>
    </UndefinedClass>
    <UndefinedDocblockClass occurrences="3">
      <code>$client</code>
      <code>PredisClient|RedisExtensionClient</code>
      <code>RedisException</code>
    </UndefinedDocblockClass>
    <UnnecessaryVarAnnotation occurrences="1">
      <code>array</code>
    </UnnecessaryVarAnnotation>
  </file>
  <file src="src/Check/SecurityAdvisory.php">
    <MixedArgument occurrences="1">
      <code>$advisories</code>
    </MixedArgument>
    <MixedAssignment occurrences="2">
      <code>$advisories</code>
      <code>$advisoriesDirectory</code>
    </MixedAssignment>
    <PropertyNotSetInConstructor occurrences="1">
      <code>SecurityAdvisory</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/StreamWrapperExists.php">
    <MissingClosureParamType occurrences="1">
      <code>$v</code>
    </MissingClosureParamType>
    <MixedArgument occurrences="1">
      <code>$v</code>
    </MixedArgument>
    <PropertyNotSetInConstructor occurrences="1">
      <code>StreamWrapperExists</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/XmlFile.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>XmlFile</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Check/YamlFile.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>YamlFile</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="src/Result/AbstractResult.php">
    <MissingReturnType occurrences="2">
      <code>setData</code>
      <code>setMessage</code>
    </MissingReturnType>
  </file>
  <file src="src/Result/Collection.php">
    <InvalidReturnStatement occurrences="1">
      <code>$index</code>
    </InvalidReturnStatement>
    <InvalidReturnType occurrences="1">
      <code>string</code>
    </InvalidReturnType>
    <MissingReturnType occurrences="1">
      <code>updateCounters</code>
    </MissingReturnType>
    <PossiblyNullArgument occurrences="1">
      <code>$checkResult</code>
    </PossiblyNullArgument>
  </file>
  <file src="src/Runner/Reporter/BasicConsole.php">
    <InvalidPropertyAssignmentValue occurrences="2">
      <code>($this-&gt;countLength * 2) + 11</code>
      <code>floor(log10($this-&gt;total)) + 1</code>
    </InvalidPropertyAssignmentValue>
    <InvalidScalarArgument occurrences="2">
      <code>$this-&gt;iteration</code>
      <code>round($this-&gt;iteration / $this-&gt;total * 100)</code>
    </InvalidScalarArgument>
    <MissingReturnType occurrences="2">
      <code>consoleWrite</code>
      <code>consoleWriteLn</code>
    </MissingReturnType>
    <PropertyNotSetInConstructor occurrences="2">
      <code>$countLength</code>
      <code>$gutter</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(int) $width</code>
    </RedundantCastGivenDocblockType>
  </file>
  <file src="src/Runner/Runner.php">
    <DocblockTypeContradiction occurrences="1">
      <code>! is_array($checks) &amp;&amp; ! $checks instanceof Traversable</code>
    </DocblockTypeContradiction>
    <InvalidArgument occurrences="1">
      <code>[$this, 'errorHandler']</code>
    </InvalidArgument>
    <MissingReturnType occurrences="8">
      <code>addCheck</code>
      <code>addChecks</code>
      <code>addReporter</code>
      <code>removeReporter</code>
      <code>setBreakOnFailure</code>
      <code>setCatchErrorSeverity</code>
      <code>startErrorHandler</code>
      <code>stopErrorHandler</code>
    </MissingReturnType>
    <MixedArgumentTypeCoercion occurrences="1">
      <code>$config</code>
    </MixedArgumentTypeCoercion>
    <MixedAssignment occurrences="2">
      <code>$key</code>
      <code>$val</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="1">
      <code>CheckInterface</code>
    </MixedInferredReturnType>
    <MixedReturnStatement occurrences="1">
      <code>$this-&gt;checks[$alias]</code>
    </MixedReturnStatement>
    <PropertyNotSetInConstructor occurrences="1">
      <code>$lastResults</code>
    </PropertyNotSetInConstructor>
    <RedundantCastGivenDocblockType occurrences="1">
      <code>(bool) $breakOnFailure</code>
    </RedundantCastGivenDocblockType>
    <RedundantConditionGivenDocblockType occurrences="1">
      <code>is_object($result)</code>
    </RedundantConditionGivenDocblockType>
  </file>
  <file src="src/autoload.php">
    <MixedArgument occurrences="1">
      <code>Doctrine\DBAL\Migrations\Configuration\Configuration::class</code>
    </MixedArgument>
    <UndefinedClass occurrences="1">
      <code>Doctrine\DBAL\Migrations\Configuration\Configuration</code>
    </UndefinedClass>
  </file>
  <file src="test/AbstractMemoryTest.php">
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <PossiblyInvalidArgument occurrences="2">
      <code>$criticalThreshold</code>
      <code>$warningThreshold</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/ApcFragmentationTest.php">
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <PossiblyInvalidArgument occurrences="2">
      <code>$criticalThreshold</code>
      <code>$warningThreshold</code>
    </PossiblyInvalidArgument>
  </file>
  <file src="test/BasicConsoleReporterTest.php">
    <InvalidArgument occurrences="1">
      <code>$alias</code>
    </InvalidArgument>
    <UnusedVariable occurrences="8">
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
      <code>$check</code>
    </UnusedVariable>
  </file>
  <file src="test/ChecksTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$allExtensions</code>
      <code>$allWrappers</code>
    </ArgumentTypeCoercion>
    <ForbiddenCode occurrences="1">
      <code>shell_exec('ps -o command= -p ' . $phpPid)</code>
    </ForbiddenCode>
    <InvalidArgument occurrences="2">
      <code>'like'</code>
      <code>new stdClass()</code>
    </InvalidArgument>
    <InvalidScalarArgument occurrences="4">
      <code>$extensions</code>
      <code>$phpPid</code>
      <code>ceil(strlen($phpPid) / 2)</code>
      <code>rand()</code>
    </InvalidScalarArgument>
    <MixedArgument occurrences="9">
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$name</code>
    </MixedArgument>
    <MixedArgumentTypeCoercion occurrences="6">
      <code>$allFalse</code>
      <code>$allFalse</code>
      <code>$name</code>
      <code>$notAllFalse</code>
      <code>$notAllFalse</code>
    </MixedArgumentTypeCoercion>
    <MixedArrayAccess occurrences="3">
      <code>$valueArray['local_value']</code>
      <code>$valueArray['local_value']</code>
      <code>$valueArray['local_value']</code>
    </MixedArrayAccess>
    <MixedAssignment occurrences="3">
      <code>$valueArray</code>
      <code>$valueArray</code>
      <code>$valueArray</code>
    </MixedAssignment>
    <MixedOperand occurrences="2">
      <code>$dir1</code>
      <code>$dir2</code>
    </MixedOperand>
    <PossiblyInvalidCast occurrences="1">
      <code>$name</code>
    </PossiblyInvalidCast>
    <PossiblyUndefinedVariable occurrences="13">
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir1</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$dir2</code>
      <code>$name</code>
    </PossiblyUndefinedVariable>
  </file>
  <file src="test/DirWritableTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$arguments</code>
      <code>$this-&gt;checkClass</code>
    </ArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/DiskFreeTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$c</code>
    </ArgumentTypeCoercion>
    <MixedInferredReturnType occurrences="3">
      <code>array</code>
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/DiskUsageTest.php">
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <PossiblyInvalidArgument occurrences="3">
      <code>$criticalThreshold</code>
      <code>$path</code>
      <code>$warningThreshold</code>
    </PossiblyInvalidArgument>
    <PossiblyInvalidCast occurrences="1">
      <code>$path</code>
    </PossiblyInvalidCast>
  </file>
  <file src="test/DoctrineMigrationTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>$expectedResult</code>
      <code>$expectedResult</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>new stdClass()</code>
    </InvalidArgument>
    <MixedArgument occurrences="2">
      <code>$version</code>
      <code>$version</code>
    </MixedArgument>
    <MixedInferredReturnType occurrences="1">
      <code>Generator</code>
    </MixedInferredReturnType>
  </file>
  <file src="test/GuzzleHttpServiceTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$resultClass</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>'not guzzle'</code>
    </InvalidArgument>
    <MixedAssignment occurrences="2">
      <code>$request</code>
      <code>$request</code>
    </MixedAssignment>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="2">
      <code>getBody</code>
      <code>getHeader</code>
    </MixedMethodCall>
    <PossiblyNullArgument occurrences="2">
      <code>$method</code>
      <code>$resultClass</code>
    </PossiblyNullArgument>
  </file>
  <file src="test/MemcacheTest.php">
    <InvalidArgument occurrences="2">
      <code>-11211</code>
      <code>['127.0.0.1']</code>
    </InvalidArgument>
    <InvalidCast occurrences="1">
      <code>['127.0.0.1']</code>
    </InvalidCast>
  </file>
  <file src="test/MemcachedTest.php">
    <InvalidArgument occurrences="2">
      <code>-11211</code>
      <code>['127.0.0.1']</code>
    </InvalidArgument>
    <InvalidCast occurrences="1">
      <code>['127.0.0.1']</code>
    </InvalidCast>
  </file>
  <file src="test/ResultCollectionTest.php">
    <ArgumentTypeCoercion occurrences="2">
      <code>'Iterator'</code>
      <code>'Traversable'</code>
    </ArgumentTypeCoercion>
    <MixedArgument occurrences="6">
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$key</code>
      <code>$value</code>
    </MixedArgument>
    <MixedArrayOffset occurrences="2">
      <code>$this-&gt;collection[$key]</code>
      <code>$this-&gt;collection[$key]</code>
    </MixedArrayOffset>
    <MixedInferredReturnType occurrences="2">
      <code>array</code>
      <code>array</code>
    </MixedInferredReturnType>
    <UnusedVariable occurrences="2">
      <code>$result</code>
      <code>$test</code>
    </UnusedVariable>
  </file>
  <file src="test/RunnerTest.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$expectedResult</code>
    </ArgumentTypeCoercion>
    <InvalidArgument occurrences="1">
      <code>'foo'</code>
    </InvalidArgument>
    <MixedInferredReturnType occurrences="1">
      <code>array</code>
    </MixedInferredReturnType>
    <MixedMethodCall occurrences="1">
      <code>getSeverity</code>
    </MixedMethodCall>
    <PossiblyNullReference occurrences="1">
      <code>getSeverity</code>
    </PossiblyNullReference>
    <TooManyArguments occurrences="1">
      <code>new ThrowException($exception)</code>
    </TooManyArguments>
    <UnusedVariable occurrences="1">
      <code>$exception</code>
    </UnusedVariable>
  </file>
  <file src="test/TestAsset/Check/ReturnThis.php">
    <LessSpecificImplementedReturnType occurrences="1">
      <code>mixed</code>
    </LessSpecificImplementedReturnType>
    <PropertyNotSetInConstructor occurrences="1">
      <code>ReturnThis</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/Check/SecurityAdvisory.php">
    <PropertyNotSetInConstructor occurrences="1">
      <code>SecurityAdvisory</code>
    </PropertyNotSetInConstructor>
  </file>
  <file src="test/TestAsset/Check/TriggerUserError.php">
    <ArgumentTypeCoercion occurrences="1">
      <code>$this-&gt;severity</code>
    </ArgumentTypeCoercion>
    <ImplementedReturnTypeMismatch occurrences="1">
      <code>bool</code>
    </ImplementedReturnTypeMismatch>
  </file>
  <file src="test/TestAsset/Check/TriggerWarning.php">
    <TooFewArguments occurrences="2">
      <code>strpos()</code>
      <code>strpos()</code>
    </TooFewArguments>
  </file>
</files>
